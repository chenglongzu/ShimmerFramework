//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;
using ShimmerNote;

public class CharacterControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CharacterController), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Move", Move);
		L.RegFunction("Attack", Attack);
		L.RegFunction("Hit", Hit);
		L.RegFunction("Input", Input);
		L.RegFunction("CharacterMove", CharacterMove);
		L.RegFunction("SendMoveMessage", SendMoveMessage);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Move(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			CharacterController obj = (CharacterController)ToLua.CheckObject<CharacterController>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.Move(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Attack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CharacterController obj = (CharacterController)ToLua.CheckObject<CharacterController>(L, 1);
			obj.Attack();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CharacterController obj = (CharacterController)ToLua.CheckObject<CharacterController>(L, 1);
			obj.Hit();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Input(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			CharacterController obj = (CharacterController)ToLua.CheckObject<CharacterController>(L, 1);
			SocketDLL.KeyCode arg0 = (SocketDLL.KeyCode)ToLua.CheckObject(L, 2, typeof(SocketDLL.KeyCode));
			SocketDLL.KeyCodeState arg1 = (SocketDLL.KeyCodeState)ToLua.CheckObject(L, 3, typeof(SocketDLL.KeyCodeState));
			obj.Input(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CharacterMove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CharacterController obj = (CharacterController)ToLua.CheckObject<CharacterController>(L, 1);
			UnityEngine.KeyCode arg0 = (UnityEngine.KeyCode)ToLua.CheckObject(L, 2, typeof(UnityEngine.KeyCode));
			obj.CharacterMove(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMoveMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CharacterController obj = (CharacterController)ToLua.CheckObject<CharacterController>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.SendMoveMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

